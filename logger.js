const { createLogger, format, transports } = require("winston");
const DailyRotateFile = require("winston-daily-rotate-file");
/**
 * The directory path where log files are stored.
 * This variable specifies the relative path to the directory that contains
 * all the log files generated by the application.
 *
 * @type {string}
 */
const logDir = './logs';

/**
 * Logger instance configured with DailyRotateFile transports for error and combined logging,
 * with options to rotate files daily, compress old logs, and limit the size and age of each log file.
 *
 * @type {object}
 */
let logger = createLogger({
	transports: [
		new DailyRotateFile({
			filename: `${logDir}/errors.log`,
			level: "error",
			maxSize: "1g",
			maxDays: "3d",
			zippedArchive: true,
			datePattern: 'YYYY-MM-DD'
		}),
		new DailyRotateFile({
			/**
			 * The filepath for the combined log file.
			 *
			 * @type {string}
			 */
			filename: `${logDir}/combined.log`,
			level: "info",
			maxSize: "1g",
			maxDays: "3d",
			zippedArchive: true,
			datePattern: 'YYYY-MM-DD'
		}),
	],
	format: format.combine(
		format.colorize(),
		format.timestamp({
			format: "D MMM HH:mm:ss",
		}),
		format.printf((nfo) => {
			return `${nfo.timestamp} - ${nfo.message}`;
		}),
	),
});

if (process.env.NODE_ENV !== "production") {
	logger.add(
		new transports.Console({
			format: format.simple(),
		}),
	);
}

module.exports = logger;
